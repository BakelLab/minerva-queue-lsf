#!/usr/bin/perl

# 04.04.2014 11:48:33 EDT
# Harm van Bakel <hvbakel@gmail.com>

# MODULES
use strict;
use warnings;
use Getopt::Long;
use Date::Parse;
use Date::Format;

# GET PARAMETERS
my $sHelp        = 0;
GetOptions("help!"   => \$sHelp);

# PRINT HELP
if ($sHelp) {
   my $sScriptName = ($0 =~ /^.*\/(.+$)/) ? $1 : $0;
   die <<HELP

   Usage: $sScriptName
   
   Calculates number of hours to the next maintenance reservation.
   Useful to time your job submission to make sure it finishes before.
   
   Options:
    -help
      This help message
   
HELP
}


##########
## MAIN ##
##########

# Get the first upcoming reservation date from brsvs
my ($nRmonth, $nRday, $nRhour, $nRmin) = (0,0,0,0);
open BRSVS, "brsvs |" or die "Error: can't run brsvs: $!\n";
while (<BRSVS>){
   next if (/^\s*$/);
   next if (/^RSVID/);
   s/[\n\r]+$//;
   if (/^\w+/){
      my ($sRsvid, $sType, $sUser, $sNcpus, $sRsvHosts, $sTime) = split / +/, $_, -1;
      $sTime =~ s/\-.*//;
      my ($nMonth, $nDay, $nHour, $nMin) = split /\//, $sTime, -1;
      $nRmonth ||= $nMonth;
      $nRday   ||= $nDay;
      $nRhour  ||= $nHour;
      $nRmin   ||= $nMin;
      $nRmonth = $nMonth < $nRmonth ? $nMonth : $nRmonth;
      $nRday   = $nDay   < $nRday   ? $nDay   : $nRday;
      $nRhour  = $nHour  < $nRhour  ? $nHour  : $nRhour;
      $nRmin   = $nMin   < $nRmin   ? $nMin   : $nRmin;
   }
}
close BRSVS;

# Get the current date
my ($nCsec,$nCmin,$nChour,$nCmday,$nCmon,$nCyear,$nCwday,$nCyday,$nCisdst) = localtime(time);
$nCyear += 1900;
$nCmon  += 1;

# Subtract the difference
my $sCurDate  = "$nCyear-$nCmon-$nCmday $nChour:$nCmin:$nCsec";
my $sResDate  = "$nCyear-$nRmonth-$nRday $nRhour:$nRmin:0";
my $nHourDiff = int((str2time($sResDate) - str2time($sCurDate)) / 3600);

# Print result
print "\nCurrent date:               $sCurDate\n";
print "Next reservation date:      $sResDate\n";
print "---------------------------------------------\n";
print "Hours to next reservation:  $nHourDiff\n\n";
