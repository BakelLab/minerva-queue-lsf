#!/bin/sh

# 21.01.2023 17:05:27 EST
# Harm van Bakel <hvbakel@gmail.com>

# Aliases
alias awkt="awk -F '\t' -v OFS='\t'"
alias sortt="sort -t $'\t'"

# Process command line arguments
EMAIL_ADDRESS=""
JOBNAME=""
MONITORNAME=""
while getopts "m:J:n:" opt; do
   case $opt in

   m) 
      EMAIL_ADDRESS="$OPTARG"
      ;;
   
   J) 
      JOBNAME="-J $OPTARG"
      ;;

   n)
      MONITORNAME=" '$OPTARG'"
      ;;
   
   *)
      echo "Incorrect options provided"
      exit 1
      ;;

   esac
done

# Grab other arguments
shift $((OPTIND-1))
JOBIDS=$@

# Check arguments and produce a help message
if [ ! "$EMAIL_ADDRESS" ];
then
  cat << EOF

   Usage: mailonfinishedjobs [ -J <job-name> ] -m <email-address> [ jobid1 ... jobidN ]

   Monitor your job queue and send email if there are no more jobs 
   in the queue. When run without extra arguments it monitors all queued
   jobs. It is also possible to provide extra arguments to filter for
   specific jobs by name or ids(s)

   Arguments:
    -m <string>
      Email address to send the notification to (required).
    -J <string>
      Monitor jobs with a specific job name (optional)
    -n <string>
      Assign a name to the monitor task (optional)
    -help
      This help message

EOF
  exit 0
fi

# Monitor job queue
>&2 echo "Starting monitoring of${MONITORNAME} jobs in HPC queue"
MONITOR=1
while [ ${MONITOR} == 1 ]
do
   NUMJOBS=`bjobs ${JOBNAME} ${JOBIDS} 2> /dev/null | grep -vP 'JOBID|EXIT|DONE' | wc -l`
   if [[ ${NUMJOBS} == 0 ]]
   then
      echo "No more${MONITORNAME} monitored jobs in HPC queue on ${HOSTNAME}." \
         | mail -s "No more${MONITORNAME} monitored jobs in HPC queue" $EMAIL_ADDRESS
      MONITOR=0
      >&2 echo "No more${MONITORNAME} jobs in HPC queue. Exiting."
   else
      sleep 30
   fi
done
