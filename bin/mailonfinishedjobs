#!/bin/sh

# 21.01.2023 17:05:27 EST
# Harm van Bakel <hvbakel@gmail.com>

# Aliases
alias awkt="awk -F '\t' -v OFS='\t'"
alias sortt="sort -t $'\t'"

# Process command line arguments
EMAIL_ADDRESS=""
JOBNAME=""
MONITORNAME=""
QUEUE=""
while getopts "m:J:q:n:" opt; do
   case $opt in

   m)
      EMAIL_ADDRESS="$OPTARG"
      ;;
   
   J)
      JOBNAME=" -J $OPTARG"
      ;;

   q)
      QUEUE=" -q $OPTARG"
      ;;

   n)
      MONITORNAME=" '$OPTARG'"
      ;;
   
   *)
      echo "Incorrect options provided"
      exit 1
      ;;

   esac
done

# Grab other arguments
shift $((OPTIND-1))
JOBIDS=$@

# Check arguments and produce a help message
if [ ! "$EMAIL_ADDRESS" ];
then
  cat << EOF

   Usage: mailonfinishedjobs [ -J <job-name> -q <queue-name> ] -m <email-address> [ jobid1 ... jobidN ]

   Monitor your job queue and send email if there are no more jobs 
   in the queue. When run without extra arguments it monitors all queued
   jobs. It is also possible to provide extra arguments to filter for
   specific jobs by name or ids(s)

   Arguments:
    -m <string>
      Email address to send the notification to (required).
    -J <string>
      Monitor jobs with a specific job name (optional)
    -q <queue>
      Monitor jobs in a specific queue (optional)
    -n <string>
      Assign a name to the monitor task (optional)
    -help
      This help message

EOF
  exit 0
fi

# It can take some time for the scheduler to pick up on newly submitted jobs. Therefore we
# add a brief delay before we begin checking the job queue
STARTTIME=`date`
>&2 echo "${STARTTIME} -- Starting monitoring of${MONITORNAME} jobs in HPC queue (command:  bjobs${JOBNAME}${QUEUE} ${JOBIDS})"
>&2 echo "${STARTTIME} -- Notification will be sent to '${EMAIL_ADDRESS}' when the queue is empty"
sleep 20

# Monitor job queue
MONITOR=1
while [ ${MONITOR} == 1 ]
do
   NUMJOBS=`bjobs ${JOBNAME} ${QUEUE} ${JOBIDS} | grep -vP 'JOBID|EXIT|DONE' | wc -l`
   if [[ ${NUMJOBS} == 0 ]]
   then
      ENDTIME=`date`
      echo "No more${MONITORNAME} monitored jobs in HPC queue on ${HOSTNAME}.  Start time: ${STARTTIME}.  End time: ${ENDTIME}" \
         | mail -s "No more${MONITORNAME} monitored jobs in HPC queue" $EMAIL_ADDRESS
      MONITOR=0
      >&2 echo "${ENDTIME} -- No more${MONITORNAME} jobs in HPC queue. Exiting."
   else
      sleep 30
   fi
done
